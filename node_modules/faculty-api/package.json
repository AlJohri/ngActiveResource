{
  "name": "faculty-api",
  "version": "0.1.0",
  "description": "Tool for creating a simple RESTful API from a Mongoose model with Express",
  "main": "lib/faculty-api.js",
  "keywords": [
    "API",
    "generator",
    "REST",
    "Mongoose",
    "Express",
    "Node",
    "MEAN"
  ],
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "author": {
    "name": "Brett Shollenberger"
  },
  "license": "MIT License",
  "readme": "# FacultyAPI\n\nFacultyAPI creates a simple, RESTful API for MEAN stack apps. \n\n#### Use:\n\n`npm install faculty-api` or in your package.json `\"faculty-api\":\"~0.1.0\"`\n\nCreate a Mongoose model, and export it to your backend `app.js`.\n\nA basic use case is illustrated below:\n\n```javascript\nvar express    = require('express');\nvar app        = module.exports = express();\nvar db         = require('./../mongooseModels');\nvar facultyApi = require('faculty-api');\n\nfacultyApi.addResource({\n  app: app,\n  urlPrefix: 'api',\n  resourceName: 'users',\n  collection: db.user\n});\n```\n\nThe only non-required option is the URL prefix, which defaults to api if you don't specify one. \n\nIn the example above, the URLs established are located at `/api/users/:id`, and include an additional route, `/api/users/schema` in case you want access to schema attributes for things like front-end validations.\n\n[See the project on npm](https://npmjs.org/package/faculty-api)\n",
  "readmeFilename": "README.md",
  "_id": "faculty-api@0.1.0",
  "dist": {
    "shasum": "9cef4b817adad98a4c4e344b6f6ed984551b0f63"
  },
  "_from": "faculty-api@~0.1.0",
  "_resolved": "https://registry.npmjs.org/faculty-api/-/faculty-api-0.1.0.tgz"
}
